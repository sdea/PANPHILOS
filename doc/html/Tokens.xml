<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>compute_SBM_CH_step</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>aa93fa79330b2c7b7ac8d2c61c146cce2</Anchor>
    <DeclaredIn>dataWrapper3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readGeom3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>a0d1b2748b99f9ec8c27f419bf1d9eeb4</Anchor>
    <Abstract>Read geometries from file. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSingleVTK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>aca1508284ed83351e88596e0c13f569f</Anchor>
    <Abstract>Functions which writes a VTI file ***. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeGeneralVTK3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>a41d66ea43322539de340303be9a5852f</Anchor>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFullVTK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>a75b5df4a9c2798dca24f61d100414386</Anchor>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeDat3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>ad35d0f8d7910b62bd844f4b68fcf965f</Anchor>
    <Abstract>Functions which write a DAT file ***. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoxProcessingFunctional3D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoxProcessingFunctional3D</Scope>
    </TokenIdentifier>
    <Path>class_box_processing_functional3_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoxProcessingFunctional3D_S</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoxProcessingFunctional3D_S</Scope>
    </TokenIdentifier>
    <Path>class_box_processing_functional3_d___s.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>solveSBM3D</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <DeclaredIn>solveSBMProcessor3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>solveSBM3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>afd3b9a4c03f9714303caeea1df633e73</Anchor>
    <DeclaredIn>solveSBMProcessor3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processGenericBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>ad45e7e1c65798f65ac1a7c0c2abdf422</Anchor>
    <DeclaredIn>solveSBMProcessor3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>ace68492a08fe686a38de17c6dbc83e3d</Anchor>
    <DeclaredIn>solveSBMProcessor3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeOfModification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>ab22fd7e42643484d85cc6bab6e2e441c</Anchor>
    <DeclaredIn>solveSBMProcessor3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eps2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a574de37d9f4cd5679bca1c2bdad47ded</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Q</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a77471f6c72034e6d988883c2578fdd1f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invh2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a7b02902d3fee757884a86257e5652e6b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a871090de996e63617b0a9a676f00c128</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>M</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a1df608663ae9b80a84b6efe5f4899b06</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a30e0cf85025bcc0037158d7c9a0050e9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosTheta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a93e4e47b33876d685612d335f8243f71</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>aeb7573139ebef542c57b3dc2cf7a92a7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>solveSBM3D</Scope>
    </TokenIdentifier>
    <Path>classsolve_s_b_m3_d.html</Path>
    <Anchor>a838f0f5067037d9ada1c7b5ccad1a966</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plb</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readGeom3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>a0d1b2748b99f9ec8c27f419bf1d9eeb4</Anchor>
    <Abstract>Read geometries from file. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSingleVTK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>aca1508284ed83351e88596e0c13f569f</Anchor>
    <Abstract>Functions which writes a VTI file ***. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeGeneralVTK3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>a41d66ea43322539de340303be9a5852f</Anchor>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFullVTK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>a75b5df4a9c2798dca24f61d100414386</Anchor>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeDat3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>ad35d0f8d7910b62bd844f4b68fcf965f</Anchor>
    <Abstract>Functions which write a DAT file ***. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_SBM_CH_step</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>plb</Scope>
    </TokenIdentifier>
    <Path>namespaceplb.html</Path>
    <Anchor>aa93fa79330b2c7b7ac8d2c61c146cce2</Anchor>
    <DeclaredIn>dataWrapper3D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plb::applyNoFlux3D</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <DeclaredIn>ApplyNoFlux3DFunctional.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyNoFlux3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <Anchor>aa305688413c7ce756ad2cb4a1aadf4de</Anchor>
    <DeclaredIn>ApplyNoFlux3DFunctional.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <Anchor>a51aa21b6fad0396eed9f118824bcdfd1</Anchor>
    <DeclaredIn>ApplyNoFlux3DFunctional.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <Anchor>aa0f95db05633b9020afefb9adc6746cc</Anchor>
    <DeclaredIn>ApplyNoFlux3DFunctional.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeOfModification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <Anchor>a9f24a1a0008c76494424914c09b45e75</Anchor>
    <DeclaredIn>ApplyNoFlux3DFunctional.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <Anchor>af2ab7095c06e3806177d902970e6f63e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::applyNoFlux3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1apply_no_flux3_d.html</Path>
    <Anchor>a70603574ec81db32e588af0aa79d8fc9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plb::ComputeMeanCurvature</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>plb::ComputeMeanCurvature</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_mean_curvature.html</Path>
    <DeclaredIn>ComputeMeanCurvature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeMeanCurvature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeMeanCurvature</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_mean_curvature.html</Path>
    <Anchor>a126a7e486fda050383df923c48475500</Anchor>
    <DeclaredIn>ComputeMeanCurvature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processGenericBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeMeanCurvature</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_mean_curvature.html</Path>
    <Anchor>a8db5cd602e079bb86ba9440d16631555</Anchor>
    <DeclaredIn>ComputeMeanCurvature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeMeanCurvature</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_mean_curvature.html</Path>
    <Anchor>ad8623a96e2e15a4c21dcc0304dc9b361</Anchor>
    <DeclaredIn>ComputeMeanCurvature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeOfModification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeMeanCurvature</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_mean_curvature.html</Path>
    <Anchor>ac361d9475717d8471f59d859af83b6bc</Anchor>
    <DeclaredIn>ComputeMeanCurvature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::ComputeMeanCurvature</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_mean_curvature.html</Path>
    <Anchor>abda238b344339ce22183ae7909ff2254</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plb::ComputeSegmentation</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>plb::ComputeSegmentation</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_segmentation.html</Path>
    <DeclaredIn>ComputeSegmentation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeSegmentation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeSegmentation</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_segmentation.html</Path>
    <Anchor>a9e95d42496243c549a865086ef7a0e59</Anchor>
    <DeclaredIn>ComputeSegmentation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processGenericBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeSegmentation</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_segmentation.html</Path>
    <Anchor>ac3f960a11b347651444d1d79543388f3</Anchor>
    <DeclaredIn>ComputeSegmentation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeSegmentation</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_segmentation.html</Path>
    <Anchor>a4dab22881c0b7813ccc35df54650d06b</Anchor>
    <DeclaredIn>ComputeSegmentation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeOfModification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::ComputeSegmentation</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_compute_segmentation.html</Path>
    <Anchor>a3c18800a51af09c08dcf9ce42d3cc66b</Anchor>
    <DeclaredIn>ComputeSegmentation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plb::SimulationParameter3D</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Abstract>Class which incorporates the simulation parameters. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimulationParameter3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a6652b0986338d7729c262133f485daeb</Anchor>
    <Abstract>Constructor: initialize from XML file. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>ab28a9d496a90c7bd350de1e68321e6c5</Anchor>
    <Abstract> Print parameters to screen. </Abstract>
    <DeclaredIn>InputOutput.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fileCName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>ab3a1f37f62cc971d0b9bbd7a15bf594b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filePsiName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a023afa2a6f55452e057ba92bd53c7e84</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a5ae74e0358ed153e28dc3c35cfba3f39</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ny</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>afc4761a6add7b6380cd4019f588f3981</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a054e26ce84b123169c837d0d2f1ffe3e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a1e9261f4a37e6fd723f1e66c36770763</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>red_factor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>ac9ee28c8d868b52712fde6519199a3be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a2069a2c3ce71fcf8ee7f3ffdca5a1491</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Q</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a0edb741036bf99715c7d369312ba3cf6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a9157b0412c3c843b129741e70abfbff0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>M</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>aea74c9633145468a426da2c024201984</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>theta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a12eec9bbd326db2158536b9f958ab9d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosTheta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a0c0f422585dea2aaf302f79e6eddaba3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SMobility</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a6fe4234c97c5682edd71ecefd4b233ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a4658d7b707548d6c785f96abcbcf2e1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outDatName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a5b464d02486be1e1a3300c2007af7981</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outVTKName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>ac40a6ee774ba83f2d7e9191822aa31b4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a4b9c8db64d5488ad29c715b1686921fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a8d7cc0d00f26da991c959e4cc487a00f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>plb::SimulationParameter3D</Scope>
    </TokenIdentifier>
    <Path>classplb_1_1_simulation_parameter3_d.html</Path>
    <Anchor>a821370dad5fe66984e68f8d78916dd74</Anchor>
  </Token>
</Tokens>
